

:root {
  --background-color: #ffffff;
  --primary-color: #000000;
  --secondary-color: #FF0000;
  --dark-red: #900000;
}

a {
  color: var(--primary-color);
}

body {
  background-color: var(--background-color);
  }

  body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.6;
  }

h1 {
  color: var(--secondary-color);
  font-size: 30px;
  font-weight: 700;
  font-style: italic;
  text-decoration: underline;
  }

h2 {
  font-size: 24px;
  font-weight: 700;
  }

h3 {
  font-size: 18px;
  font-weight: 700;
  }


  a:visited {
  /* visited link */
  color: var(--secondary-color);
}

a:hover, a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  /* selected link */
  color: var(--primary-color);
}

.button, button {
  border: none;
  display: inline-block;
  font-family: inherit;
  background-color: var(--secondary-color);
  color: white;
  text-decoration: none;
  padding: 10px;
  border-radius: 3px;
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

.button__secondary {
  border: none;
  display: inline-block;
  font-family: inherit;
  background-color: var(--dark-red);
  color: white;
  text-decoration: none;
  padding: 10px;
  border-radius: 3px;
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
}

button:hover, button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

.navigation-list__item {
  text-decoration: none;
}

.profile__portrait-container {
    flex-basis: 500px;
}

.profile__portrait {
    float: left;
    width: 100%;
    border-radius: 50%;
    max-width: 500px;
    flex-basis: 100px;
    flex-shrink: 1;
}

.profile__textblock {
    flex-basis: 250px;
    flex-shrink: 0;
    text-align: center;
}

.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
  background-color: #FF0000;
  padding-bottom: 10px;
}

.profile {
    max-width: 800px;
    margin: 30px auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

* {
  box-sizing: border-box;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
}

.grid__item {
  background-color: lightgray;
}

.profile {
  display: grid;
}

.grid__item:last-child {
  grid-column: 3 / 3;
  grid-row: 1 / 3;
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}
@media all and (min-width: 500px) and (max-width: 750px){
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}
@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}



.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
